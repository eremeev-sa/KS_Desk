import React, { useState } from 'react';
import { SubtaskRequest, updateSubtask } from '../../services/Subtask';

type SubtaskProps = {
    id: string; // ID –ø–æ–¥–∑–∞–¥–∞—á–∏
    name: string; // –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏
    onDelete: (id: string) => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á–∏
    onUpdate: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∑–∞–¥–∞—á
};

const Subtask: React.FC<SubtaskProps> = ({ id, name, onDelete, onUpdate }) => {
    const [isEditing, setIsEditing] = useState(false); // –§–ª–∞–≥ –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const [tempName, setTempName] = useState(name); // –í—Ä–µ–º–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const handleEditClick = () => {
        setIsEditing(true); // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    const handleSubtaskUpdate = async (id: string) => {
        try {
            const updatedSubtask = { name: tempName };  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            await updateSubtask(id, updatedSubtask);

            onUpdate();
            setTempName("");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–∑–∞–¥–∞—á–∏:", error);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const handleSaveClick = () => {
        handleSubtaskUpdate(id); // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–∑–∞–¥–∞—á—É
        setIsEditing(false); // –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const handleCancelClick = () => {
        setTempName(name); // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è –ø–æ–¥–∑–∞–¥–∞—á–∏
        setIsEditing(false); // –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    };

    return (
        <div className=''>
            <div className="d-flex w-100 align-items-center justify-content-between">
                {/* –ï—Å–ª–∏ –ø–æ–¥–∑–∞–¥–∞—á–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ */}
                {isEditing ? (
                    <div>
                        <input
                            id="name-input"
                            title="–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
                            type="text"
                            className="form-control me-2"
                            value={tempName}
                            onChange={(e) => setTempName(e.target.value)} // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
                            style={{ flex: "1" }}
                        />
                    </div>
                ) : (
                    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –¥–≤–æ–π–Ω–æ–º—É –∫–ª–∏–∫—É
                    <span
                        className="text-container noselect"
                        onDoubleClick={handleEditClick}
                    >
                        {name}
                    </span>
                )}
                {/* –ï—Å–ª–∏ –ø–æ–¥–∑–∞–¥–∞—á–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω—ã */}
                {isEditing ? (
                    <>
                        <button
                            className="btn btn-accept btn-sm me-2"
                            style={{ flexShrink: 0 }}
                            onClick={handleSaveClick} // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                        >
                            ‚úî
                        </button>
                        <button
                            className="btn btn-cancel btn-sm"
                            style={{ flexShrink: 0 }}
                            onClick={handleCancelClick} // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                        >
                            ‚úñ
                        </button>
                    </>
                ) : (
                    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á–∏
                    <button
                        className="btn btn-delete btn-sm"
                        onClick={() => onDelete(id)} // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏
                    >
                        üóë
                    </button>
                )}
            </div>
        </div>
    );
};

export default Subtask;
